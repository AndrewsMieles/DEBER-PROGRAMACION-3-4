from abc import ABC, abstractmethod


class FiguraGeometrica(ABC):

    def __init__(self, ancho:float=0.0, alto:float=0.0):
        self._ancho = ancho
        self._alto = alto

    @property
    def ancho(self):
        return self._ancho

    @ancho.setter
    def ancho(self, ancho):
        self._ancho= ancho

    @property
    def alto(self):
        return self._alto

    @alto.setter
    def alto(self, alto):
        self._alto = alto

    def __str__(self):
        return f'Figura Geometrica [{self.__dict__.__str__()}]'


#from figura_geometrica import FiguraGeometrica


class triangulo(FiguraGeometrica):
    def __init__(self, lado: float = 0.0):
        super().__init__(ancho=lado, alto=lado)

    def __str__(self):
        return f'triangulo [lado = {self.alto}]'

    def calcular_area(self):
        return (self.alto * self.ancho)/2

    def calcular_perimetro(self):
        return 3 * self.alto


if __name__ == '__main__':
    c1 = triangulo(lado=3)
    print(c1)
    print(f'El Ã¡rea del triangulo es: {c1.calcular_area()}')
    print(f'El perimetro del triangulo es: {c1.calcular_perimetro()}')
